***CONFIGURATION***

This software packages includes an autoconfiguration script, called configure.
Normally the configuration process can work out reasonable defaults
automatically. So just run

	./configure

in the top level directory and you are set.

It is however possible to guide the configuration by passing appropriate
arguments to the script. To learn more about valid arguments and what they
do just launch

	./configure --help

NOTE for users of non-GNU libc (FreeBSD, Solaris, ...) :
This package uses GNU getopt_long extension from the GNU libc, which
is normally NOT available on FreeBSD, Solaris and possibly other
platforms. A local copy of getopt_long is included and configure
will pick it up automatically. Make sure the line

Checking for GNU getopt_long... provided by local copy

is output when running configure or otherwise force the use of the local
copy of GNU getopt_long by passing the --enable-local-gnugetopt option
to configure.


***COMPILATION***

Once you have successfully configured this package you can compile it using
GNU make.

	gmake

On most Linux and cygwin systems, the standard make is traditionally 
GNU make. In that case an equivalent way to start the compilation is :

	make

***ALTERNATIVE***

A jamfile for this project is included.

***SHORT INSTALL GUIDE***

When compilation finishes, you will find a fastdep binary in the top level
directory of this package. To install it, simply copy it to a convenient
location. Possible suggestions are /usr/local/bin or /usr/bin.

***LONG INSTALL GUIDE***

I am experimenting with installation schemes for software. That's why this
procedure is a bit weird. You can safely ignore what follows if you don't 
like it.

The idea is to have (non-essential) packages install themselves in
/opt/$(CATEGORY)/$(PACKAGENAME).

Examples of $(CATEGORY)'s are

devel			development utilities
devel/c		c development utilities
devel/c++	c++ development utilities
games			games
games/board	board games
games/strategy	strategy games
wm/x11		x11 window managers

Categories are grouped by function first and not technicalities. So no
x11/games (x11 is a technicality in this case). No x11/wm, but wm/x11.

Categories are essentially directories.  Preferably there should be some 
'standards' convention for them (yet another standard).

Packagename should not contain version information unless multiple versions
of the same package must be installed side by side. In that case a link to
the default should be provided.

Within /opt/$(CATEGORY)/$(PACKAGENAME) packages are free to do whatever they
likes, except for Makefile.install (more about that later). To create some
order in the chaos they will probably follow a mini-filesystem.

eg. binaries in /opt/$(CATEGORY)/$(PACKAGENAME)/bin etc...

/opt/$(CATEGORY)/$(PACKAGENAME) must at least contain the file
Makefile.install.  Which must be a Makefile (surprise, surprise) with at
least one target :
uninstall (this does not have to be the default one, though). Uninstall should
do the necessary things to uninstall said package. (surprise again).

Now for a step by step guide to installation.

1. Verify Makefile.options. Most notably if you are installing this package
as a user who does not have write access to /opt change the PREFIX line to
(for example) PREFIX=/home/myself/opt

2. make boot to compile the package

3. make -f Makefile.install check-install to check what will be installed
and where. (Optional)

4. make -f Makefile.install install to install everything.

done.

To uninstall simply chdir to $(PREFIX)/devel/c/fastdep and do 

make -f Makefile.install check-uninstall to optionally review what will be
removed and make -f Makefile.install uninstall to really uninstall.

Comments? Ideas? Mail bvh-cplusplus@irule.be
