# This is a test file for the .pobj parser. The purpose behind this file
# format is a friendlier, more-flexible format for generating C++ PObject
# code.
# Any line beginning with a # is a comment. Used anywhere else in a line, it
# is treated as a literal #. The properties, backend, and methods sections
# may be omitted. Everything else should be pretty obvious
[global]
Module=PTextView
Header=PTextView.h
CodeFileName=PTextView.cpp
ParentHeaderName="PView.h"

[includes]
<Application.h>
<TextView.h>
<Window.h>
<stdio.h>
"PClipboard.h"
"PObjectBroker.h"

[object]
Name=PTextView
FriendlyName=Text Editor
Description=A multi-line text editing control
UsesView=true
ParentClass=public PView

[properties]
Property bool(false) HideTyping : Hides typing, such as for a password box.
	GetValue:IsTypingHidden(void)
	SetValue:HideTyping(bool)

Property enum(B_ALIGN_RIGHT) Alignment : THe current alignment mode of the text view's contents.
#	GetValue:Alignment(void)
	GetValue:Alignment(embedded)
BeginEmbeddedCode
This is some embedded code line 1
This is some embedded code line 2
This is some embedded code line 3
EndEmbeddedCode
	SetValue:SetAlignment(int->alignment)
	Enum:Left,B_ALIGN_LEFT
	Enum:Center,B_ALIGN_CENTER
	Enum:Right,B_ALIGN_RIGHT

[methods]
Method CanEndLine
	CallName CanEndLine
	Param int32 offset(&int32) : Offset to test for line ending.
	Return bool value : True if the character can be the last one on a line.

Method Cut
BeginEmbeddedCode
	if (!pobject || !in || !out)
		return B_ERROR;
	
	PView *parent = static_cast<PView*>(pobject);
	if (!parent)
		return B_BAD_TYPE;
	
	BTextView *backend = (BTextView*)parent->GetView();
	
	PArgs args(in), outargs(out);
	
	uint64 id = 0;
	if (args.FindInt64("clipid", (int64*)&id) != B_OK)
		return B_ERROR;
	
	PObject *obj = BROKER->FindObject(id);
	if (!obj || obj->GetType().ICompare("PClipboard") != 0)
		return B_BAD_DATA;
	
	PClipboard *clip = dynamic_cast<PClipboard*>(obj);
	
	if (backend->Window())
		backend->Window()->Lock();
	
	backend->Cut(clip->GetBackend());
	
	if (backend->Window())
		backend->Window()->Unlock();
	
	return B_OK;
EndEmbeddedCode

[backend]
ParentClass=public BTextView
InitCode=BRect(0,0,99,99), "textview", BRect(5,5,94,94), B_FOLLOW_LEFT | B_FOLLOW_TOP
UsePViewEvents=true
